generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @unique
  username     String
  email        String         @unique
  activated    Boolean        @default(false)
  session      Session[]
  Key          Key[]
  projects     Project[]
  todoItems    TodoItems[]
  todoKeywords TodoKeywords[]

  @@map("users")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  expires         BigInt?
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("keys")
}

model Project {
  id         Int         @id @default(autoincrement())
  name       String
  color      String
  user_id    String
  user       User        @relation(references: [id], fields: [user_id], onDelete: Cascade)
  todo_items TodoItems[]

  @@map("projects")
}

model TodoItems {
  id         Int      @id @default(autoincrement())
  name       String
  content    String?
  priority   Int       @default(2)
  scheduled  String?
  deadline   String?
  user_id    String
  user       User     @relation(references: [id], fields: [user_id], onDelete: Cascade)
  project_id Int?
  project    Project? @relation(references: [id], fields: [project_id], onDelete: Cascade)

  @@map("todo_items")
}

model TodoKeywords {
  id            Int     @id @default(autoincrement())
  name          String
  fastAccessKey String?
  color         String
  isActionable  Boolean @default(true)
  user_id       String
  user          User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@map("todo_keywords")
}

// * TODO Buy Milk #A :TODO:WORK
//   SCHEDULED: <2023-03-10 09:00> DEADLINE: <2023-03-10 10:00 -- 11:00>
//   This is the note content
